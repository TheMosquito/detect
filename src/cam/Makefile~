# A simple local MQTT broker for Horizon servcies to use

# ----------------------------------------------------------------------------

ifndef DOCKER_BASE
$(error DOCKER_BASE is not set. export DOCKER_BASE=<your-docker-account-base>)
endif

ifndef OWNER_GROUP
$(error OWNER_GROUP is not set. Set to your common or your initials.dev or .demo or .test export OWNER_GROUP=sg.dev))
endif

ifndef HZN_ORG_ID
$(error HZN_ORG_ID is not set. export HZN_ORG_ID=mycluster))
endif

ifndef HZN_EXCHANGE_USER_AUTH
$(error HZN_EXCHANGE_USER_AUTH is not set. export HZN_EXCHANGE_USER_AUTH=iamapikey:<your-iamapikey>))
endif

# You must always use the Horizon name for architecture (`hzn architecture`)
export ARCH ?= $(shell hzn architecture)

# Import variables from hzn.json (file is generated by last target in this file)
-include .hzn.json.tmp.mk

# ----------------------------------------------------------------------------

# Build the docker container
build:
	docker build -t $(DOCKER_IMAGE_BASE)_$(ARCH):$(SERVICE_VERSION) -f ./Dockerfile.$(ARCH) .

# Push the docker container to the DockerHub registry
push:
	docker push $(DOCKER_IMAGE_BASE)_$(ARCH):$(SERVICE_VERSION)

# Publish a Horizon service (per service.json) and pull image to get its sha256
publish-service:
	hzn exchange service publish -f service.json --pull-image

# Remove the local container image
clean:
	-docker rmi $(DOCKER_IMAGE_BASE)_$(ARCH):$(SERVICE_VERSION) 2>/dev/null || :
	rm -f .hzn.json.tmp.mk

# ----------------------------------------------------------------------------

test-cam:
	-docker rm -f cam 2>/dev/null || :
	docker run --rm -d -e CAM_DEVICE="V4L2:/dev/video0" --privileged --name cam --network mqtt-net --network-alias cam $(DOCKER_IMAGE_BASE)_$(ARCH):$(SERVICE_VERSION)
	docker exec -it cam sh -c 'apt install -y jq'
test-get:
	docker exec -it cam sh -c 'mosquitto_sub -h mqtt -p 1883 -t /cam -C 1 | jq --raw-output --join-output ".cam.image"' | base64 -d > foo.jpg
test-end:
	docker rm -f cam

# ----------------------------------------------------------------------------

# This imports the variables from hzn.json
.hzn.json.tmp.mk: hzn.json
	@ hzn util configconv -f $< > $@

