# A driver that calls the yolov3 detector, and pushed data to both mqtt and kafka

# ----------------------------------------------------------------------------

-include ../../env.check.mk

# You must always use the Horizon name for architecture (`hzn architecture`)
export ARCH ?= $(shell hzn architecture)

# Import variables from hzn.json (file is generated by last target in this file)
-include .hzn.json.tmp.mk

# ----------------------------------------------------------------------------

# Build the docker container
build:
	docker build -t $(DOCKER_IMAGE_BASE)_$(ARCH):$(SERVICE_VERSION) -f ./Dockerfile.$(ARCH) .

# Push the docker container to the DockerHub registry
push:
	docker push $(DOCKER_IMAGE_BASE)_$(ARCH):$(SERVICE_VERSION)

# Publish a Horizon service (per service.json) and pull image to get its sha256
publish-service:
	hzn exchange service publish -f service.json --pull-image

add-business-policy:
	hzn exchange business addpolicy -f biz_policy_$(IMAGE_NAME).json biz_$(IMAGE_NAME)_$(ARCH)_$(SERVICE_VERSION)_$(EDGE_DEPLOY)_$(EDGE_OWNER)

# Remove the local container image
clean:
	@docker rmi $(DOCKER_IMAGE_BASE)_$(ARCH):$(SERVICE_VERSION) 2>/dev/null || :
	@rm -f .hzn.json.tmp.mk

# ----------------------------------------------------------------------------

dev:
	-docker rm -f app 2>/dev/null || :
	docker run -it -v `pwd`:/outside \
	   -e HZN_DEVICE_ID="${HZN_DEVICE_ID}" \
	   -e EVENTSTREAMS_BROKER_URLS="${EVENTSTREAMS_BROKER_URLS}" \
	   -e EVENTSTREAMS_API_KEY="${EVENTSTREAMS_API_KEY}" \
	   -e EVENTSTREAMS_PUB_TOPIC="${EVENTSTREAMS_PUB_TOPIC}" \
	   --name app --network mqtt-net --network-alias app \
	   $(DOCKER_IMAGE_BASE)_$(ARCH):$(SERVICE_VERSION) /bin/sh

test-app:
	-docker rm -f app 2>/dev/null || :
	docker run --rm -d \
	   -e HZN_DEVICE_ID="${HZN_DEVICE_ID}" \
	   -e EVENTSTREAMS_BROKER_URLS="${EVENTSTREAMS_BROKER_URLS}" \
	   -e EVENTSTREAMS_API_KEY="${EVENTSTREAMS_API_KEY}" \
	   -e EVENTSTREAMS_PUB_TOPIC="${EVENTSTREAMS_PUB_TOPIC}" \
	   --name app --network mqtt-net --network-alias app \
	   $(DOCKER_IMAGE_BASE)_$(ARCH):$(SERVICE_VERSION)

# ----------------------------------------------------------------------------

# This imports the variables from hzn.json
.hzn.json.tmp.mk: hzn.json
	@ hzn util configconv -f $< > $@

